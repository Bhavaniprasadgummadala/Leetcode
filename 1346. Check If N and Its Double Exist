1346. Check If N and Its Double Exist
Easy

Given an array arr of integers, check if there exist two indices i and j such that :

i != j
0 <= i, j < arr.length
arr[i] == 2 * arr[j]

Example 1:

Input: arr = [10,2,5,3]
Output: true
Explanation: For i = 0 and j = 2, arr[i] == 10 == 2 * 5 == 2 * arr[j]

Example 2:
Input: arr = [3,1,7,11]
Output: false
Explanation: There is no i and j that satisfy the conditions.
 
Constraints:

2 <= arr.length <= 500
-103 <= arr[i] <= 103


Solution in Cpp


class Solution {
public:
    bool checkIfExist(vector<int>& arr) {
        sort(arr.begin(), arr.end());
        
        for (int i = 0; i < arr.size(); i++) {
            int target = 2 * arr[i];
            int result = binarySearch(arr, target);
            if (result != -1 && result != i) {
                return true;
            }
        }
        
        return false;
    }

    int binarySearch(vector<int>& arr, int target) {
        int s = 0, e = arr.size() - 1;
        
        while (s <= e) {
            int mid = s + (e - s) / 2;
            
            if (arr[mid] == target) {
                return mid;
            } else if (arr[mid] < target) {
                s = mid + 1;
            } else {
                e = mid - 1;
            }
        }
        
        return -1;
    }
};
